apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "grafana.fullname" . }}
  labels:
    app: {{ template "grafana.name" . }}
    chart: {{ template "grafana.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "grafana.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "grafana.name" . }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: 'false'
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          env:
          - name: GF_SECURITY_ADMIN_USER
            value: {{ .Values.user }}
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: {{ .Values.password }}
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning/
          volumeMounts:
          - name: grafana
            mountPath: /var/lib/grafana
          - name: dashboards
            mountPath: /etc/grafana/dashboards
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources
          - name: providers
            mountPath: /etc/grafana/provisioning/dashboards
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: grafana
        emptyDir: {}
      - name: dashboards
        configMap:
          name: {{ template "grafana.fullname" . }}-dashboards
      - name: providers
        configMap:
          name: {{ template "grafana.fullname" . }}-providers
      - name: datasources
        configMap:
          name: {{ template "grafana.fullname" . }}-datasources
